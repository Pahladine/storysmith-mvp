// pages/api/surpriseHeroDetails.js

import OpenAI from 'openai';

if (!process.env.OPENAI_API_KEY) {
    throw new Error('Missing OPENAI_API_KEY environment variable');
}

const openai = new OpenAI({
    apiKey: process.env.OPENAI_API_KEY,
});

export default async function handler(req, res) {
    if (req.method !== 'POST') {
        return res.status(405).json({ message: 'Method Not Allowed' });
    }

    const { heroType } = req.body;

    const prompt = `
Generate a single, complete hero concept for a children's story. The hero should be a ${heroType} character. The output should be a JSON object with the following keys:
{
  "name": "a unique name",
  "age": "a number between 4 and 9",
  "gender": "boy, girl, or non-binary",
  "traits": "a list of 3-4 descriptive words like brave, curious, kind",
  "wardrobe": "a simple, non-complex description of clothing",
  "signature_item": "a small, memorable object"
}
Ensure the output is a single JSON object with no other text, no code fences, and is valid. The wardrobe and signature_item should follow the style guides for visual reproducibility.
`;

    try {
        const chatCompletion = await openai.chat.completions.create({
            model: "gpt-3.5-turbo",
            messages: [{ role: "user", content: prompt }],
            temperature: 0.9,
            max_tokens: 200,
            response_format: { type: "json_object" },
        });

        const heroDetails = JSON.parse(chatCompletion.choices[0].message.content.trim());
        res.status(200).json({ heroDetails });

    } catch (error) {
        console.error("OpenAI API Error:", error.message);
        res.status(500).json({ message: 'Failed to generate hero details', error: error.message });
    }
}